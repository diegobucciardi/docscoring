<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <context:annotation-config />
    <mvc:annotation-driven/>
    <mvc:resources mapping="/resources/**" location="/resources/" />
    <context:component-scan base-package="com.dab.docscoring.controller" />
    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
        p:location="/WEB-INF/jdbc.properties" />
    <bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix">
            <value>/WEB-INF/pages/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
    </bean>
    <bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.databaseurl}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>
    <!-- Hibernate Session Factory -->
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan">
            <array>
                <value>com.dab.docscoring.hibernate.*</value>
            </array>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${jdbc.dialect}</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>
    <bean id="companyDAO" class="com.dab.docscoring.hibernate.dao.CompanyDAO"/>
    <bean id="userDAO" class="com.dab.docscoring.hibernate.dao.UserDAO"/>
    <bean id="docTypeDAO" class="com.dab.docscoring.hibernate.dao.DocumentTypeDAO"/>
    <bean id="scoringDAO" class="com.dab.docscoring.hibernate.dao.ScoringDAO"/>
    
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="dataSource" ref="dataSource" />
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" />
    
<!--     <http auto-config="true"> -->
<!--         <intercept-url pattern="/welcome*" access="ROLE_USER" /> -->
<!--         <form-login login-page="/login" default-target-url="/welcome" -->
<!--             authentication-failure-url="/loginfailed" /> -->
<!--         <logout logout-success-url="/logout" /> -->
<!--     </http> -->
 
<!--     <authentication-manager> -->
<!--        <authentication-provider> -->
<!--         <jdbc-user-service data-source-ref="dataSource" -->
 
<!--            users-by-username-query=" -->
<!--               select username,password, enabled  -->
<!--               from users where username=?"  -->
 
<!--            authorities-by-username-query=" -->
<!--               select u.username, ur.authority from users u, user_roles ur  -->
<!--               where u.user_id = ur.user_id and u.username =?  "  -->
 
<!--         /> -->
<!--        </authentication-provider> -->
<!--     </authentication-manager> -->
</beans>
